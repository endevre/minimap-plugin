{"version":3,"file":"rete-minimap-plugin.common.js","sources":["src/utils.ts","src/coordinate-system.ts","src/index.ts"],"sourcesContent":["import { Rect } from './types'\n\nexport function nodesBoundingBox(nodes: Rect[]) {\n  const lefts = nodes.map(n => n.left)\n  const rights = nodes.map(n => n.left + n.width)\n  const tops = nodes.map(n => n.top)\n  const bottoms = nodes.map(n => n.top + n.height)\n  const left = Math.min(...lefts),\n    right = Math.max(...rights),\n    top = Math.min(...tops),\n    bottom = Math.max(...bottoms)\n\n  return {\n    left, right, top, bottom,\n    width: right - left,\n    height: bottom - top\n  }\n}\n","import { Rect } from './types'\nimport { nodesBoundingBox } from './utils'\n\nexport function useBoundingCoordinateSystem(rects: Rect[], minDistance: number, ratio: number) {\n  const boundingBox = nodesBoundingBox(rects)\n  const distance = Math.max(minDistance, Math.max(boundingBox.width, boundingBox.height * ratio))\n  const originX = (distance - boundingBox.width) / 2 - boundingBox.left\n  const originY = (distance / ratio - boundingBox.height) / 2 - boundingBox.top\n  const scale = (v: number) => v / distance\n  const invert = (v: number) => v * distance\n\n  return {\n    origin: {\n      x: originX,\n      y: originY\n    },\n    scale,\n    invert\n  }\n}\n","import { BaseSchemes, GetSchemes, NodeEditor, Root, Scope } from 'rete'\nimport { Area2D, AreaPlugin, RenderSignal } from 'rete-area-plugin'\n\nimport { useBoundingCoordinateSystem } from './coordinate-system'\nimport { Rect } from './types'\n\ntype NodeSize = { width: number, height: number }\n\ntype ExpectedScheme = GetSchemes<\n  BaseSchemes['Node'] & NodeSize,\n  BaseSchemes['Connection']\n>\nexport type Transform = {\n  x: number\n  y: number\n  k: number\n}\n/**\n * Extra signal types for minimap rendering\n * @priority 10\n */\nexport type MinimapExtra =\n  | RenderSignal<'minimap', {\n    ratio: number\n    nodes: Rect[]\n    viewport: Rect\n    start(): Transform\n    translate(dx: number, dy: number): void\n    point(x: number, y: number): void\n  }>\n\n/**\n * Minimap plugin, triggers rendering of the minimap\n * @priority 9\n * @listens nodetranslated\n * @listens nodecreated\n * @listens noderemoved\n * @listens translated\n * @listens resized\n * @listens noderesized\n * @listens zoomed\n * @emits render\n */\nexport class MinimapPlugin<Schemes extends ExpectedScheme> extends Scope<never, [Area2D<Schemes> | MinimapExtra, Root<Schemes>]> {\n  element!: HTMLElement\n  editor!: NodeEditor<Schemes>\n  area!: AreaPlugin<Schemes, MinimapExtra>\n\n  ratio: number\n  minDistance: number\n  boundViewport: boolean\n\n  /**\n   * @constructor\n   * @param props Plugin properties\n   * @param props.ratio minimap ratio. Default is `1`\n   * @param props.minDistance minimap minimum distance. Default is `2000`\n   * @param props.boundViewport whether to bound the mini-viewport to the minimap. Default is `false`\n   */\n  constructor(private props?: { minDistance?: number, ratio?: number, boundViewport?: boolean }) {\n    super('minimap')\n\n    this.ratio = this.props?.ratio || 1\n    this.minDistance = this.props?.minDistance || 2000\n    this.boundViewport = Boolean(this.props?.boundViewport)\n\n    this.getNodesRect = this.getNodesRect.bind(this)\n  }\n\n  setParent(scope: Scope<MinimapExtra | Area2D<Schemes>, [Root<Schemes>]>): void {\n    super.setParent(scope)\n\n    this.area = this.parentScope<AreaPlugin<Schemes>>(AreaPlugin)\n    this.editor = this.area.parentScope<NodeEditor<Schemes>>(NodeEditor)\n\n    this.element = document.createElement('div')\n    this.area.container.appendChild(this.element)\n\n    // eslint-disable-next-line complexity\n    this.addPipe(context => {\n      if (!('type' in context)) return context\n\n      if (context.type === 'render' && context.data.type === 'node') {\n        this.render()\n      } else if (context.type === 'nodetranslated') {\n        this.render()\n      } else if (context.type === 'nodecreated') {\n        this.render()\n      } else if (context.type === 'noderemoved') {\n        this.render()\n      } else if (context.type === 'translated') {\n        this.render()\n      } else if (context.type === 'resized') {\n        this.render()\n      } else if (context.type === 'noderesized') {\n        this.render()\n      } else if (context.type === 'zoomed') {\n        this.render()\n      }\n\n      return context\n    })\n  }\n\n  private getNodesRect(): Rect[] {\n    return this.editor.getNodes().map(node => {\n      const view = this.area.nodeViews.get(node.id)\n\n      if (!view) return null\n\n      return {\n        width: node.width,\n        height: node.height,\n        left: view.position.x,\n        top: view.position.y,\n        id: node.id\n      }\n    }).filter(Boolean) as Rect[]\n  }\n\n  getCurrNodes() {\n    const nodes = this.getNodesRect()\n    const { transform } = this.area.area\n    const { clientWidth: width, clientHeight: height } = this.area.container\n    const { minDistance, ratio } = this\n    const viewport: Rect = {\n      left: -transform.x / transform.k,\n      top: -transform.y / transform.k,\n      width: width / transform.k,\n      height: height / transform.k\n    }\n    const rects = this.boundViewport ? [...nodes, viewport] : nodes\n    const { origin, scale } = useBoundingCoordinateSystem(rects, minDistance, ratio)\n\n    return nodes.map(node => ({\n      left: scale(node.left + origin.x),\n      top: scale(node.top + origin.y),\n      width: scale(node.width),\n      height: scale(node.height),\n      id: node.id\n    }))\n  }\n\n  private render() {\n    const parent = this.parentScope() as any as Scope<MinimapExtra>\n    const nodes = this.getNodesRect()\n    const { transform } = this.area.area\n    const { clientWidth: width, clientHeight: height } = this.area.container\n    const { minDistance, ratio } = this\n    const viewport: Rect = {\n      left: -transform.x / transform.k,\n      top: -transform.y / transform.k,\n      width: width / transform.k,\n      height: height / transform.k\n    }\n    const rects = this.boundViewport ? [...nodes, viewport] : nodes\n    const { origin, scale, invert } = useBoundingCoordinateSystem(rects, minDistance, ratio)\n\n    parent.emit({\n      type: 'render',\n      data: {\n        type: 'minimap',\n        element: this.element,\n        ratio,\n        start: () => transform,\n        nodes: nodes.map(node => ({\n          left: scale(node.left + origin.x),\n          top: scale(node.top + origin.y),\n          width: scale(node.width),\n          height: scale(node.height),\n          id: node.id\n        })),\n        viewport: {\n          left: scale(viewport.left + origin.x),\n          top: scale(viewport.top + origin.y),\n          width: scale(viewport.width),\n          height: scale(viewport.height)\n        },\n        translate: (dx, dy) => {\n          const { x, y, k } = transform\n\n          this.area.area.translate(x + invert(dx) * k, y + invert(dy) * k)\n        },\n        point: (x, y) => {\n          const areaCoordinatesPoint = {\n            x: (origin.x - invert(x)) * transform.k,\n            y: (origin.y - invert(y)) * transform.k\n          }\n          const center = {\n            x: areaCoordinatesPoint.x + width / 2,\n            y: areaCoordinatesPoint.y + height / 2\n          }\n\n          this.area.area.translate(center.x, center.y)\n        }\n      }\n    })\n  }\n}\n"],"names":["nodesBoundingBox","nodes","lefts","map","n","left","rights","width","tops","top","bottoms","height","Math","min","apply","_toConsumableArray","right","max","bottom","useBoundingCoordinateSystem","rects","minDistance","ratio","boundingBox","distance","originX","originY","scale","v","invert","origin","x","y","MinimapPlugin","_Scope","_inherits","_super","_createSuper","props","_this$props","_this$props2","_this$props3","_this","_classCallCheck","call","boundViewport","Boolean","getNodesRect","bind","_assertThisInitialized","_createClass","key","value","setParent","scope","_this2","_get","_getPrototypeOf","prototype","area","parentScope","AreaPlugin","editor","NodeEditor","element","document","createElement","container","appendChild","addPipe","context","type","data","render","_this3","getNodes","node","view","nodeViews","get","id","position","filter","getCurrNodes","transform","_this$area$container","clientWidth","clientHeight","viewport","k","concat","_useBoundingCoordinat","_this4","parent","_this$area$container2","_useBoundingCoordinat2","emit","start","translate","dx","dy","point","areaCoordinatesPoint","center","Scope"],"mappings":"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"}