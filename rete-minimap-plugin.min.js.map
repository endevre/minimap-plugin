{"version":3,"file":"rete-minimap-plugin.min.js","sources":["src/coordinate-system.ts","src/utils.ts","src/index.ts"],"sourcesContent":["import { Rect } from './types'\nimport { nodesBoundingBox } from './utils'\n\nexport function useBoundingCoordinateSystem(rects: Rect[], minDistance: number, ratio: number) {\n  const boundingBox = nodesBoundingBox(rects)\n  const distance = Math.max(minDistance, Math.max(boundingBox.width, boundingBox.height * ratio))\n  const originX = (distance - boundingBox.width) / 2 - boundingBox.left\n  const originY = (distance / ratio - boundingBox.height) / 2 - boundingBox.top\n  const scale = (v: number) => v / distance\n  const invert = (v: number) => v * distance\n\n  return {\n    origin: {\n      x: originX,\n      y: originY\n    },\n    scale,\n    invert\n  }\n}\n","import { Rect } from './types'\n\nexport function nodesBoundingBox(nodes: Rect[]) {\n  const lefts = nodes.map(n => n.left)\n  const rights = nodes.map(n => n.left + n.width)\n  const tops = nodes.map(n => n.top)\n  const bottoms = nodes.map(n => n.top + n.height)\n  const left = Math.min(...lefts),\n    right = Math.max(...rights),\n    top = Math.min(...tops),\n    bottom = Math.max(...bottoms)\n\n  return {\n    left, right, top, bottom,\n    width: right - left,\n    height: bottom - top\n  }\n}\n","import { BaseSchemes, GetSchemes, NodeEditor, Root, Scope } from 'rete'\nimport { Area2D, AreaPlugin, RenderSignal } from 'rete-area-plugin'\n\nimport { useBoundingCoordinateSystem } from './coordinate-system'\nimport { Rect } from './types'\n\ntype NodeSize = { width: number, height: number }\n\ntype ExpectedScheme = GetSchemes<\n  BaseSchemes['Node'] & NodeSize,\n  BaseSchemes['Connection']\n>\nexport type Transform = {\n  x: number\n  y: number\n  k: number\n}\n/**\n * Extra signal types for minimap rendering\n * @priority 10\n */\nexport type MinimapExtra =\n  | RenderSignal<'minimap', {\n    ratio: number\n    nodes: Rect[]\n    viewport: Rect\n    start(): Transform\n    translate(dx: number, dy: number): void\n    point(x: number, y: number): void\n  }>\n\n/**\n * Minimap plugin, triggers rendering of the minimap\n * @priority 9\n * @listens nodetranslated\n * @listens nodecreated\n * @listens noderemoved\n * @listens translated\n * @listens resized\n * @listens noderesized\n * @listens zoomed\n * @emits render\n */\nexport class MinimapPlugin<Schemes extends ExpectedScheme> extends Scope<never, [Area2D<Schemes> | MinimapExtra, Root<Schemes>]> {\n  element!: HTMLElement\n  editor!: NodeEditor<Schemes>\n  area!: AreaPlugin<Schemes, MinimapExtra>\n\n  ratio: number\n  minDistance: number\n  boundViewport: boolean\n\n  /**\n   * @constructor\n   * @param props Plugin properties\n   * @param props.ratio minimap ratio. Default is `1`\n   * @param props.minDistance minimap minimum distance. Default is `2000`\n   * @param props.boundViewport whether to bound the mini-viewport to the minimap. Default is `false`\n   */\n  constructor(private props?: { minDistance?: number, ratio?: number, boundViewport?: boolean }) {\n    super('minimap')\n\n    this.ratio = this.props?.ratio || 1\n    this.minDistance = this.props?.minDistance || 2000\n    this.boundViewport = Boolean(this.props?.boundViewport)\n\n    this.getNodesRect = this.getNodesRect.bind(this)\n  }\n\n  setParent(scope: Scope<MinimapExtra | Area2D<Schemes>, [Root<Schemes>]>): void {\n    super.setParent(scope)\n\n    this.area = this.parentScope<AreaPlugin<Schemes>>(AreaPlugin)\n    this.editor = this.area.parentScope<NodeEditor<Schemes>>(NodeEditor)\n\n    this.element = document.createElement('div')\n    this.area.container.appendChild(this.element)\n\n    // eslint-disable-next-line complexity\n    this.addPipe(context => {\n      if (!('type' in context)) return context\n\n      if (context.type === 'render' && context.data.type === 'node') {\n        this.render()\n      } else if (context.type === 'nodetranslated') {\n        this.render()\n      } else if (context.type === 'nodecreated') {\n        this.render()\n      } else if (context.type === 'noderemoved') {\n        this.render()\n      } else if (context.type === 'translated') {\n        this.render()\n      } else if (context.type === 'resized') {\n        this.render()\n      } else if (context.type === 'noderesized') {\n        this.render()\n      } else if (context.type === 'zoomed') {\n        this.render()\n      }\n\n      return context\n    })\n  }\n\n  private getNodesRect(): Rect[] {\n    return this.editor.getNodes().map(node => {\n      const view = this.area.nodeViews.get(node.id)\n\n      if (!view) return null\n\n      return {\n        width: node.width,\n        height: node.height,\n        left: view.position.x,\n        top: view.position.y,\n        id: node.id\n      }\n    }).filter(Boolean) as Rect[]\n  }\n\n  getCurrNodes() {\n    const nodes = this.getNodesRect()\n    const { transform } = this.area.area\n    const { clientWidth: width, clientHeight: height } = this.area.container\n    const { minDistance, ratio } = this\n    const viewport: Rect = {\n      left: -transform.x / transform.k,\n      top: -transform.y / transform.k,\n      width: width / transform.k,\n      height: height / transform.k\n    }\n    const rects = this.boundViewport ? [...nodes, viewport] : nodes\n    const { origin, scale } = useBoundingCoordinateSystem(rects, minDistance, ratio)\n\n    return nodes.map(node => ({\n      left: scale(node.left + origin.x),\n      top: scale(node.top + origin.y),\n      width: scale(node.width),\n      height: scale(node.height),\n      id: node.id\n    }))\n  }\n\n  private render() {\n    const parent = this.parentScope() as any as Scope<MinimapExtra>\n    const nodes = this.getNodesRect()\n    const { transform } = this.area.area\n    const { clientWidth: width, clientHeight: height } = this.area.container\n    const { minDistance, ratio } = this\n    const viewport: Rect = {\n      left: -transform.x / transform.k,\n      top: -transform.y / transform.k,\n      width: width / transform.k,\n      height: height / transform.k\n    }\n    const rects = this.boundViewport ? [...nodes, viewport] : nodes\n    const { origin, scale, invert } = useBoundingCoordinateSystem(rects, minDistance, ratio)\n\n    parent.emit({\n      type: 'render',\n      data: {\n        type: 'minimap',\n        element: this.element,\n        ratio,\n        start: () => transform,\n        nodes: nodes.map(node => ({\n          left: scale(node.left + origin.x),\n          top: scale(node.top + origin.y),\n          width: scale(node.width),\n          height: scale(node.height),\n          id: node.id\n        })),\n        viewport: {\n          left: scale(viewport.left + origin.x),\n          top: scale(viewport.top + origin.y),\n          width: scale(viewport.width),\n          height: scale(viewport.height)\n        },\n        translate: (dx, dy) => {\n          const { x, y, k } = transform\n\n          this.area.area.translate(x + invert(dx) * k, y + invert(dy) * k)\n        },\n        point: (x, y) => {\n          const areaCoordinatesPoint = {\n            x: (origin.x - invert(x)) * transform.k,\n            y: (origin.y - invert(y)) * transform.k\n          }\n          const center = {\n            x: areaCoordinatesPoint.x + width / 2,\n            y: areaCoordinatesPoint.y + height / 2\n          }\n\n          this.area.area.translate(center.x, center.y)\n        }\n      }\n    })\n  }\n}\n"],"names":["useBoundingCoordinateSystem","rects","minDistance","ratio","nodes","lefts","rights","tops","bottoms","left","right","top","bottom","boundingBox","map","n","width","height","Math","min","apply","_toConsumableArray","max","distance","origin","x","y","scale","v","invert","MinimapPlugin","_Scope","_inherits","_super","_createSuper","props","_this$props","_this$props2","_this$props3","_this","_classCallCheck","call","boundViewport","Boolean","getNodesRect","bind","_assertThisInitialized","key","value","scope","_this2","this","_get","_getPrototypeOf","prototype","area","parentScope","AreaPlugin","editor","NodeEditor","element","document","createElement","container","appendChild","addPipe","context","type","data","render","_this3","getNodes","node","view","nodeViews","get","id","position","filter","transform","_this$area$container","clientWidth","clientHeight","viewport","k","_useBoundingCoordinat","concat","_this4","parent","_this$area$container2","_useBoundingCoordinat2","emit","start","translate","dx","dy","point","areaCoordinatesPoint","center","Scope"],"mappings":"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"}